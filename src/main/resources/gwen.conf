#
# Gwen Settings
# -------------
# 
# For more detailed information about each setting see:
# - https://gweninterpreter.org/docs/settings#settings-reference
#
# Format: HOCON (Human-Optimized Config Object Notation superset of JSON)
# - See: https://github.com/lightbend/config/blob/master/HOCON.md
#

gwen {
  baseDir = "."
  outDir = "${gwen.baseDir}/output"
  assertion {
    mode = "hard"                 # hard|soft|sustained
  }
  auto {
    bind {
      tableData {
        outline {
          examples = true
        }
      }
    }
    trim {
      data {
        csv = false
        json = false
      }
    }
  }
  behavior {
    rules = "strict"              # strict|lenient
  }
  error {
    messages {
      inline {
        locators = false
      }
    }
  }
  console {
    log {
      colors = true
      depth = 1                   # "infinity" to log all depths
      stepDefs = true
    }
    repl {
      autoSuggestions = true
      tabCompletion = true
    }
  }
  dryRun {
    limit {
      tableData {
        outline {
          examples {
            records = "infinity"  # "infinity" to include all records in dry run
          }
        }
      }
    }
  }
  feature {
    dialect = "en"
    failfast {
      enabled = true
      exit = false
    }
    mode = "declarative"          # declarative|imperative
  }
  input {
    data {
      maskFields = [
      ]
      readOnly = true
    }
  }
  launch {                        # Launch options
    options {                     # See: https://gweninterpreter.org/docs/settings#launch-settings
      batch  = false
      format = [
        # "html"
        # "results"
        # "junit"
        # "json"
        # "none"
      ]
      dryRun = false
      features = [
      ]
      inputData = ""
      meta = [
      ]
      parallel = false
      report = ${gwen.outDir}/reports
      tags = [
        # "@tag1"
        # "~@tag2"
        # ..
      ]
      verbose = false
    }
  }
  logLevel {
    deprecations = "warn"         # warn|error|none
  }
  mask {
    char = "*"
  }
  parallel {
    maxThreads = auto             # auto|number|percentage (auto = all available cores)
  }
  rampup {
    interval {
      seconds = 0                 # 0 = non staggerred parallel execution
    }
  }
  report {
    attach {
      functions = true
    }
    overwrite = false
    slideshow {
      framespersecond = 4
    }
    suppress {
      meta = true
    }
    stepDef {
      indent {
        pixels = 20
      }
    }
  }
  state {
    level = "feature"             # feature|scenario
  }
  video {
    dir = ${gwen.outDir}/.video
    timeoutSecs = 10
  }
}
